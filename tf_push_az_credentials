#!/usr/bin/env python3
""""
This script pushes AZ credentials to a terraform workspace
Make sure you have a file called $HOME/.azure/credentials with the following contents  

{
  "tenant_id": "",
  "subscription_id": "",
  "client_id": "",
  "client_secret": ""
}

"""

import os
import json
import requests

def get_token():
    # get the credentials for your TFC environment
    home_directory = os.environ["HOME"]
    file = open(home_directory + "/.terraform.d/credentials.tfrc.json")

    # get the token data
    data = json.load(file)
    token = (data["credentials"]["app.terraform.io"]["token"])
    
    # Closing file
    file.close()
    return token

def get_az_credentials():
    # get the credentials for your TFC environment
    home_directory = os.environ["HOME"]
    file = open(home_directory + '/.azure/credentials')

    # get the token data
    result = json.load(file)
        
    # Closing file
    file.close()
    return result

def get_workspace_id(token, tf_hostname, organization_name, workspace_name):
    # get the workspace ID 
    headers = {
        'Authorization': f"Bearer {token}",
        'Content-Type': 'application/vnd.api+json',
    }
    
    workspace_url = "https://" + tf_hostname + "/api/v2/organizations/" + organization_name + "/workspaces/" + workspace_name
    response = requests.get(workspace_url, headers=headers)
    data = response.json()
    result = (data["data"]["id"])
    
    return result

def push_credentials(token, tf_hostname, az_credentials, workspace_id):
    headers = {
        'Authorization': f"Bearer {token}",
        'Content-Type': 'application/vnd.api+json',
    }
    
    url = "https://" + tf_hostname + "/api/v2/vars/"
    
    for cred in az_credentials:
      if cred == "tenant_id":
        az_credentials_key = "ARM_TENANT_ID"
        az_credentials_value = az_credentials[cred]
        az_credentials_sensitive = "false"
      elif cred == "subscription_id":   
        az_credentials_key = "ARM_SUBSCRIPTION_ID"
        az_credentials_value = az_credentials[cred]
        az_credentials_sensitive = "false"
      elif cred == "client_id":   
        az_credentials_key = "ARM_CLIENT_ID"
        az_credentials_value = az_credentials[cred]  
        az_credentials_sensitive = "false"
      elif cred == "client_secret":   
        az_credentials_key = "ARM_CLIENT_SECRET"
        az_credentials_value = az_credentials[cred]  
        az_credentials_sensitive = "true"
               
      payload = {"data": {
         "type":"vars",
         "attributes": {
         "key": az_credentials_key,
         "value": az_credentials_value,
         "description":"Azure Credentials",
             "category":"env",
             "hcl": "false",
             "sensitive": az_credentials_sensitive
           },
           "relationships": {
             "workspace": {
               "data": {
                 "id": workspace_id,
                 "type":"workspaces"
               }
             }
           }
         }
      } 
            
            
      requests.post(url, headers=headers, json=payload)
    
    

# Get the values
tf_hostname       = str(input("Terraform Hostname? (default: app.terraform.io) : ") or "app.terraform.io")
organization_name = str(input("Organization name? (default: patrickmunne) : ") or "patrickmunne")
workspace_name    = str(input("Workspace name? : "))

az_credentials = get_az_credentials()
token = get_token()
workspace_id = get_workspace_id(token, tf_hostname, organization_name, workspace_name)

push_credentials(token, tf_hostname, az_credentials, workspace_id)
